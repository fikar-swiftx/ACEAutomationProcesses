//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ACEAutomationProcesses.AuthService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Core.service.livelink.opentext.com", ConfigurationName="AuthService.Authentication")]
    public interface Authentication {
        
        // CODEGEN: Generating message contract since message AuthenticateApplicationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateApplication", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateApplicationResp" +
            "onse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACEAutomationProcesses.AuthService.AuthenticateApplicationResponse AuthenticateApplication(ACEAutomationProcesses.AuthService.AuthenticateApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateApplication", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateApplicationResp" +
            "onse")]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.AuthenticateApplicationResponse> AuthenticateApplicationAsync(ACEAutomationProcesses.AuthService.AuthenticateApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthenticateUser(string userName, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<string> AuthenticateUserAsync(string userName, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateUserWithApplicationToken", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateUserWithApplica" +
            "tionTokenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthenticateUserWithApplicationToken(string userName, string userPassword, string applicationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/AuthenticateUserWithApplicationToken", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/AuthenticateUserWithApplica" +
            "tionTokenResponse")]
        System.Threading.Tasks.Task<string> AuthenticateUserWithApplicationTokenAsync(string userName, string userPassword, string applicationToken);
        
        // CODEGEN: Generating message contract since message CombineApplicationTokenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/CombineApplicationToken", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/CombineApplicationTokenResp" +
            "onse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACEAutomationProcesses.AuthService.CombineApplicationTokenResponse CombineApplicationToken(ACEAutomationProcesses.AuthService.CombineApplicationTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/CombineApplicationToken", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/CombineApplicationTokenResp" +
            "onse")]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.CombineApplicationTokenResponse> CombineApplicationTokenAsync(ACEAutomationProcesses.AuthService.CombineApplicationTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetOTDSResourceID", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/GetOTDSResourceIDResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOTDSResourceID();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetOTDSResourceID", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/GetOTDSResourceIDResponse")]
        System.Threading.Tasks.Task<string> GetOTDSResourceIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetOTDSServer", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/GetOTDSServerResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOTDSServer();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetOTDSServer", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/GetOTDSServerResponse")]
        System.Threading.Tasks.Task<string> GetOTDSServerAsync();
        
        // CODEGEN: Generating message contract since message GetSessionExpirationDateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetSessionExpirationDate", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/GetSessionExpirationDateRes" +
            "ponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACEAutomationProcesses.AuthService.GetSessionExpirationDateResponse GetSessionExpirationDate(ACEAutomationProcesses.AuthService.GetSessionExpirationDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetSessionExpirationDate", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/GetSessionExpirationDateRes" +
            "ponse")]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.GetSessionExpirationDateResponse> GetSessionExpirationDateAsync(ACEAutomationProcesses.AuthService.GetSessionExpirationDateRequest request);
        
        // CODEGEN: Generating message contract since message ImpersonateApplicationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ImpersonateApplication", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ImpersonateApplicationRespo" +
            "nse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACEAutomationProcesses.AuthService.ImpersonateApplicationResponse ImpersonateApplication(ACEAutomationProcesses.AuthService.ImpersonateApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ImpersonateApplication", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ImpersonateApplicationRespo" +
            "nse")]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.ImpersonateApplicationResponse> ImpersonateApplicationAsync(ACEAutomationProcesses.AuthService.ImpersonateApplicationRequest request);
        
        // CODEGEN: Generating message contract since message ImpersonateUserRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ImpersonateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ImpersonateUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACEAutomationProcesses.AuthService.ImpersonateUserResponse ImpersonateUser(ACEAutomationProcesses.AuthService.ImpersonateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ImpersonateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ImpersonateUserResponse")]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.ImpersonateUserResponse> ImpersonateUserAsync(ACEAutomationProcesses.AuthService.ImpersonateUserRequest request);
        
        // CODEGEN: Generating message contract since message RefreshTokenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/RefreshToken", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/RefreshTokenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ACEAutomationProcesses.AuthService.RefreshTokenResponse RefreshToken(ACEAutomationProcesses.AuthService.RefreshTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/RefreshToken", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/RefreshTokenResponse")]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.RefreshTokenResponse> RefreshTokenAsync(ACEAutomationProcesses.AuthService.RefreshTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ValidateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ValidateUserResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateUser(string capToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/ValidateUser", ReplyAction="urn:Core.service.livelink.opentext.com/Authentication/ValidateUserResponse")]
        System.Threading.Tasks.Task<string> ValidateUserAsync(string capToken);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:api.ecm.opentext.com")]
    public partial class OTAuthentication : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string authenticationTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AuthenticationToken {
            get {
                return this.authenticationTokenField;
            }
            set {
                this.authenticationTokenField = value;
                this.RaisePropertyChanged("AuthenticationToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateApplication", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class AuthenticateApplicationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string applicationID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=1)]
        public string password;
        
        public AuthenticateApplicationRequest() {
        }
        
        public AuthenticateApplicationRequest(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationID, string password) {
            this.OTAuthentication = OTAuthentication;
            this.applicationID = applicationID;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateApplicationResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class AuthenticateApplicationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string AuthenticateApplicationResult;
        
        public AuthenticateApplicationResponse() {
        }
        
        public AuthenticateApplicationResponse(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string AuthenticateApplicationResult) {
            this.OTAuthentication = OTAuthentication;
            this.AuthenticateApplicationResult = AuthenticateApplicationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CombineApplicationToken", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class CombineApplicationTokenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string applicationToken;
        
        public CombineApplicationTokenRequest() {
        }
        
        public CombineApplicationTokenRequest(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationToken) {
            this.OTAuthentication = OTAuthentication;
            this.applicationToken = applicationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CombineApplicationTokenResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class CombineApplicationTokenResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string CombineApplicationTokenResult;
        
        public CombineApplicationTokenResponse() {
        }
        
        public CombineApplicationTokenResponse(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string CombineApplicationTokenResult) {
            this.OTAuthentication = OTAuthentication;
            this.CombineApplicationTokenResult = CombineApplicationTokenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSessionExpirationDate", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetSessionExpirationDateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        public GetSessionExpirationDateRequest() {
        }
        
        public GetSessionExpirationDateRequest(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication) {
            this.OTAuthentication = OTAuthentication;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSessionExpirationDateResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetSessionExpirationDateResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> GetSessionExpirationDateResult;
        
        public GetSessionExpirationDateResponse() {
        }
        
        public GetSessionExpirationDateResponse(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, System.Nullable<System.DateTime> GetSessionExpirationDateResult) {
            this.OTAuthentication = OTAuthentication;
            this.GetSessionExpirationDateResult = GetSessionExpirationDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImpersonateApplication", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class ImpersonateApplicationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string applicationID;
        
        public ImpersonateApplicationRequest() {
        }
        
        public ImpersonateApplicationRequest(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationID) {
            this.OTAuthentication = OTAuthentication;
            this.applicationID = applicationID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImpersonateApplicationResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class ImpersonateApplicationResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string ImpersonateApplicationResult;
        
        public ImpersonateApplicationResponse() {
        }
        
        public ImpersonateApplicationResponse(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string ImpersonateApplicationResult) {
            this.OTAuthentication = OTAuthentication;
            this.ImpersonateApplicationResult = ImpersonateApplicationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImpersonateUser", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class ImpersonateUserRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string userName;
        
        public ImpersonateUserRequest() {
        }
        
        public ImpersonateUserRequest(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string userName) {
            this.OTAuthentication = OTAuthentication;
            this.userName = userName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImpersonateUserResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class ImpersonateUserResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string ImpersonateUserResult;
        
        public ImpersonateUserResponse() {
        }
        
        public ImpersonateUserResponse(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string ImpersonateUserResult) {
            this.OTAuthentication = OTAuthentication;
            this.ImpersonateUserResult = ImpersonateUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RefreshToken", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class RefreshTokenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        public RefreshTokenRequest() {
        }
        
        public RefreshTokenRequest(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication) {
            this.OTAuthentication = OTAuthentication;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RefreshTokenResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class RefreshTokenResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public string RefreshTokenResult;
        
        public RefreshTokenResponse() {
        }
        
        public RefreshTokenResponse(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string RefreshTokenResult) {
            this.OTAuthentication = OTAuthentication;
            this.RefreshTokenResult = RefreshTokenResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AuthenticationChannel : ACEAutomationProcesses.AuthService.Authentication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationClient : System.ServiceModel.ClientBase<ACEAutomationProcesses.AuthService.Authentication>, ACEAutomationProcesses.AuthService.Authentication {
        
        public AuthenticationClient() {
        }
        
        public AuthenticationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ACEAutomationProcesses.AuthService.AuthenticateApplicationResponse ACEAutomationProcesses.AuthService.Authentication.AuthenticateApplication(ACEAutomationProcesses.AuthService.AuthenticateApplicationRequest request) {
            return base.Channel.AuthenticateApplication(request);
        }
        
        public string AuthenticateApplication(ref ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationID, string password) {
            ACEAutomationProcesses.AuthService.AuthenticateApplicationRequest inValue = new ACEAutomationProcesses.AuthService.AuthenticateApplicationRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationID = applicationID;
            inValue.password = password;
            ACEAutomationProcesses.AuthService.AuthenticateApplicationResponse retVal = ((ACEAutomationProcesses.AuthService.Authentication)(this)).AuthenticateApplication(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.AuthenticateApplicationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.AuthenticateApplicationResponse> ACEAutomationProcesses.AuthService.Authentication.AuthenticateApplicationAsync(ACEAutomationProcesses.AuthService.AuthenticateApplicationRequest request) {
            return base.Channel.AuthenticateApplicationAsync(request);
        }
        
        public System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.AuthenticateApplicationResponse> AuthenticateApplicationAsync(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationID, string password) {
            ACEAutomationProcesses.AuthService.AuthenticateApplicationRequest inValue = new ACEAutomationProcesses.AuthService.AuthenticateApplicationRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationID = applicationID;
            inValue.password = password;
            return ((ACEAutomationProcesses.AuthService.Authentication)(this)).AuthenticateApplicationAsync(inValue);
        }
        
        public string AuthenticateUser(string userName, string userPassword) {
            return base.Channel.AuthenticateUser(userName, userPassword);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserAsync(string userName, string userPassword) {
            return base.Channel.AuthenticateUserAsync(userName, userPassword);
        }
        
        public string AuthenticateUserWithApplicationToken(string userName, string userPassword, string applicationToken) {
            return base.Channel.AuthenticateUserWithApplicationToken(userName, userPassword, applicationToken);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserWithApplicationTokenAsync(string userName, string userPassword, string applicationToken) {
            return base.Channel.AuthenticateUserWithApplicationTokenAsync(userName, userPassword, applicationToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ACEAutomationProcesses.AuthService.CombineApplicationTokenResponse ACEAutomationProcesses.AuthService.Authentication.CombineApplicationToken(ACEAutomationProcesses.AuthService.CombineApplicationTokenRequest request) {
            return base.Channel.CombineApplicationToken(request);
        }
        
        public string CombineApplicationToken(ref ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationToken) {
            ACEAutomationProcesses.AuthService.CombineApplicationTokenRequest inValue = new ACEAutomationProcesses.AuthService.CombineApplicationTokenRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationToken = applicationToken;
            ACEAutomationProcesses.AuthService.CombineApplicationTokenResponse retVal = ((ACEAutomationProcesses.AuthService.Authentication)(this)).CombineApplicationToken(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.CombineApplicationTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.CombineApplicationTokenResponse> ACEAutomationProcesses.AuthService.Authentication.CombineApplicationTokenAsync(ACEAutomationProcesses.AuthService.CombineApplicationTokenRequest request) {
            return base.Channel.CombineApplicationTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.CombineApplicationTokenResponse> CombineApplicationTokenAsync(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationToken) {
            ACEAutomationProcesses.AuthService.CombineApplicationTokenRequest inValue = new ACEAutomationProcesses.AuthService.CombineApplicationTokenRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationToken = applicationToken;
            return ((ACEAutomationProcesses.AuthService.Authentication)(this)).CombineApplicationTokenAsync(inValue);
        }
        
        public string GetOTDSResourceID() {
            return base.Channel.GetOTDSResourceID();
        }
        
        public System.Threading.Tasks.Task<string> GetOTDSResourceIDAsync() {
            return base.Channel.GetOTDSResourceIDAsync();
        }
        
        public string GetOTDSServer() {
            return base.Channel.GetOTDSServer();
        }
        
        public System.Threading.Tasks.Task<string> GetOTDSServerAsync() {
            return base.Channel.GetOTDSServerAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ACEAutomationProcesses.AuthService.GetSessionExpirationDateResponse ACEAutomationProcesses.AuthService.Authentication.GetSessionExpirationDate(ACEAutomationProcesses.AuthService.GetSessionExpirationDateRequest request) {
            return base.Channel.GetSessionExpirationDate(request);
        }
        
        public System.Nullable<System.DateTime> GetSessionExpirationDate(ref ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication) {
            ACEAutomationProcesses.AuthService.GetSessionExpirationDateRequest inValue = new ACEAutomationProcesses.AuthService.GetSessionExpirationDateRequest();
            inValue.OTAuthentication = OTAuthentication;
            ACEAutomationProcesses.AuthService.GetSessionExpirationDateResponse retVal = ((ACEAutomationProcesses.AuthService.Authentication)(this)).GetSessionExpirationDate(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.GetSessionExpirationDateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.GetSessionExpirationDateResponse> ACEAutomationProcesses.AuthService.Authentication.GetSessionExpirationDateAsync(ACEAutomationProcesses.AuthService.GetSessionExpirationDateRequest request) {
            return base.Channel.GetSessionExpirationDateAsync(request);
        }
        
        public System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.GetSessionExpirationDateResponse> GetSessionExpirationDateAsync(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication) {
            ACEAutomationProcesses.AuthService.GetSessionExpirationDateRequest inValue = new ACEAutomationProcesses.AuthService.GetSessionExpirationDateRequest();
            inValue.OTAuthentication = OTAuthentication;
            return ((ACEAutomationProcesses.AuthService.Authentication)(this)).GetSessionExpirationDateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ACEAutomationProcesses.AuthService.ImpersonateApplicationResponse ACEAutomationProcesses.AuthService.Authentication.ImpersonateApplication(ACEAutomationProcesses.AuthService.ImpersonateApplicationRequest request) {
            return base.Channel.ImpersonateApplication(request);
        }
        
        public string ImpersonateApplication(ref ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationID) {
            ACEAutomationProcesses.AuthService.ImpersonateApplicationRequest inValue = new ACEAutomationProcesses.AuthService.ImpersonateApplicationRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationID = applicationID;
            ACEAutomationProcesses.AuthService.ImpersonateApplicationResponse retVal = ((ACEAutomationProcesses.AuthService.Authentication)(this)).ImpersonateApplication(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.ImpersonateApplicationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.ImpersonateApplicationResponse> ACEAutomationProcesses.AuthService.Authentication.ImpersonateApplicationAsync(ACEAutomationProcesses.AuthService.ImpersonateApplicationRequest request) {
            return base.Channel.ImpersonateApplicationAsync(request);
        }
        
        public System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.ImpersonateApplicationResponse> ImpersonateApplicationAsync(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string applicationID) {
            ACEAutomationProcesses.AuthService.ImpersonateApplicationRequest inValue = new ACEAutomationProcesses.AuthService.ImpersonateApplicationRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.applicationID = applicationID;
            return ((ACEAutomationProcesses.AuthService.Authentication)(this)).ImpersonateApplicationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ACEAutomationProcesses.AuthService.ImpersonateUserResponse ACEAutomationProcesses.AuthService.Authentication.ImpersonateUser(ACEAutomationProcesses.AuthService.ImpersonateUserRequest request) {
            return base.Channel.ImpersonateUser(request);
        }
        
        public string ImpersonateUser(ref ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string userName) {
            ACEAutomationProcesses.AuthService.ImpersonateUserRequest inValue = new ACEAutomationProcesses.AuthService.ImpersonateUserRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.userName = userName;
            ACEAutomationProcesses.AuthService.ImpersonateUserResponse retVal = ((ACEAutomationProcesses.AuthService.Authentication)(this)).ImpersonateUser(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.ImpersonateUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.ImpersonateUserResponse> ACEAutomationProcesses.AuthService.Authentication.ImpersonateUserAsync(ACEAutomationProcesses.AuthService.ImpersonateUserRequest request) {
            return base.Channel.ImpersonateUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.ImpersonateUserResponse> ImpersonateUserAsync(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication, string userName) {
            ACEAutomationProcesses.AuthService.ImpersonateUserRequest inValue = new ACEAutomationProcesses.AuthService.ImpersonateUserRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.userName = userName;
            return ((ACEAutomationProcesses.AuthService.Authentication)(this)).ImpersonateUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ACEAutomationProcesses.AuthService.RefreshTokenResponse ACEAutomationProcesses.AuthService.Authentication.RefreshToken(ACEAutomationProcesses.AuthService.RefreshTokenRequest request) {
            return base.Channel.RefreshToken(request);
        }
        
        public string RefreshToken(ref ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication) {
            ACEAutomationProcesses.AuthService.RefreshTokenRequest inValue = new ACEAutomationProcesses.AuthService.RefreshTokenRequest();
            inValue.OTAuthentication = OTAuthentication;
            ACEAutomationProcesses.AuthService.RefreshTokenResponse retVal = ((ACEAutomationProcesses.AuthService.Authentication)(this)).RefreshToken(inValue);
            OTAuthentication = retVal.OTAuthentication;
            return retVal.RefreshTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.RefreshTokenResponse> ACEAutomationProcesses.AuthService.Authentication.RefreshTokenAsync(ACEAutomationProcesses.AuthService.RefreshTokenRequest request) {
            return base.Channel.RefreshTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<ACEAutomationProcesses.AuthService.RefreshTokenResponse> RefreshTokenAsync(ACEAutomationProcesses.AuthService.OTAuthentication OTAuthentication) {
            ACEAutomationProcesses.AuthService.RefreshTokenRequest inValue = new ACEAutomationProcesses.AuthService.RefreshTokenRequest();
            inValue.OTAuthentication = OTAuthentication;
            return ((ACEAutomationProcesses.AuthService.Authentication)(this)).RefreshTokenAsync(inValue);
        }
        
        public string ValidateUser(string capToken) {
            return base.Channel.ValidateUser(capToken);
        }
        
        public System.Threading.Tasks.Task<string> ValidateUserAsync(string capToken) {
            return base.Channel.ValidateUserAsync(capToken);
        }
    }
}
